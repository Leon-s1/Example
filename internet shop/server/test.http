GET / HTTP/1.1
Host: localhost:7000

###

POST / HTTP/1.1
Host: localhost:7000
Content-type: application/json; charset=utf-8

{
  "name": "Сергей",
  "age": 30
}
#****************************************************************
### Список всех товаров
GET /api/product/getall HTTP/1.1
Host: localhost:7000

### Получить один товар
GET /api/product/getone/12345 HTTP/1.1
Host: localhost:7000

### Создать новый товар
POST /api/product/create HTTP/1.1
Host: localhost:7000


### Обновить товар
PUT /api/product/update/12345 HTTP/1.1
Host: localhost:7000

### Удалить товар
DELETE /api/product/delete/12345 HTTP/1.1
Host: localhost:7000


#***************************************************************
#создадим один товар, получим его из БД по идентификатору, потом обновим, а затем — удалим.
#Для этого редактируем файл test.http:
### Список всех товаров
GET /api/product/getall HTTP/1.1
Host: localhost:7000

### Получить один товар
#GET /api/product/getone/1 HTTP/1.1
#Host: localhost:7000

### Создать новый товар
#POST /api/product/create HTTP/1.1
#Host: localhost:7000
#Content-type: application/json; charset=utf-8
#
#{
#  "name": "Первый товар1",
#  "price": 111111
#}

### Обновить товар
#PUT /api/product/update/10 HTTP/1.1
#Host: localhost:7000
#Content-type: application/json; charset=utf-8
#
#{
#  "name": "Первый товар (обновление)",
#  "price": 22222
#}

### Удалить товар
#DELETE /api/product/delete/1 HTTP/1.1
#Host: localhost:7000


#**********************************************************************
#Готовим POST-запрос —  кладем в директорию shop/server файл picture.jpg:
### создание товара с изображением
POST /api/product/create HTTP/1.1
Host: localhost:7000
Content-Type: multipart/form-data; boundary=MultiPartFormDataBoundary

#{
#  "name": "Первый товар1",
#  "price": 111111,
#  "image": picture.jpg
#}


--MultiPartFormDataBoundary
Content-Disposition: form-data; name="name"

Название товара3333
--MultiPartFormDataBoundary
Content-Disposition: form-data; name="price"

11111
--MultiPartFormDataBoundary
Content-Disposition: form-data; name="image"; filename="picture.jpg"
Content-Type: image/jpeg

< ./picture.jpg
--MultiPartFormDataBoundary--
#*************************************************************



#Проверим, что свойства добавляются — редактируем test.http и отправляем POST-запрос:
### создание товара, у которого есть свойства
POST /api/product/create HTTP/1.1
Host: localhost:7000
Content-Type: multipart/form-data; boundary=MultiPartFormDataBoundary

#{
#  "name": "Название товара 18",
#  "price": 12345,
#  "image": picture.jpg
#}

--MultiPartFormDataBoundary
Content-Disposition: form-data; name="name"
Content-Type: text/plain; charset=utf-8

Название товара 19
--MultiPartFormDataBoundary
Content-Disposition: form-data; name="price"
Content-Type: text/plain; charset=utf-8

12345
--MultiPartFormDataBoundary
Content-Disposition: form-data; name="props"
Content-type: text/plain; charset=utf-8

[{"name": "Свойство 1", "value": "Значение 1"},{"name": "Свойство 2", "value": "Значение 2"}]
--MultiPartFormDataBoundary
Content-Disposition: form-data; name="image"; filename="picture.jpg"
Content-Type: image/jpeg

< ./picture.jpg
--MultiPartFormDataBoundary--